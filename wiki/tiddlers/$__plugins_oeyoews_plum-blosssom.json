[
    {
        "title": "$:/plugins/oeyoews/plum-blosssom",
        "type": "application/json",
        "created": "20231103060000000",
        "text": "{\"tiddlers\":{\"$:/plugins/oeyoews/plum-blosssom/readme\":{\"title\":\"$:/plugins/oeyoews/plum-blosssom/readme\",\"text\":\"<!-- plugin template readme -->\\n\\n## Motivation\\n\\n- https://github.com/antfu/antfu.me/blob/eb52c0f20a2673ea5af15a4c9154e4181fe177d5/src/components/Plum.vue#L19\\n- https://github.com/antfu/plum-demo\\n- https://www.bilibili.com/video/BV1wY411n7er/?spm_id_from=333.999.0.0&vd_source=d6afd7eedd9f9c940321c63f0a1539e3\\n\\n<!-- your plugin motivation, or why you write this plugin -->\\n\",\"type\":\"text/markdown\",\"description\":\"plum-blosssom\"},\"$:/plugins/oeyoews/plum-blosssom/pageTemplate\":{\"title\":\"$:/plugins/oeyoews/plum-blosssom/pageTemplate\",\"tags\":\"$:/tags/PageTemplate\",\"text\":\"<!-- TODO: only on homepage -->\\n<div class=\\\"fixed inset-0 pointer-events-none print:hidden -z-[1]\\\">\\n\\t<$plum />\\n</div>\"},\"$:/plugins/oeyoews/plum-blosssom/plum.js\":{\"title\":\"$:/plugins/oeyoews/plum-blosssom/plum.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/plum-blosssom/plum.js\\ntype: application/javascript\\nmodule-type: library\\n\\n\\\\*/\\n\\nmodule.exports = function (canvas) {\\n  const r180 = Math.PI;\\n  const r90 = Math.PI / 2;\\n  const r15 = Math.PI / 12;\\n  const color = '#88888825';\\n\\n  function initCanvas(canvas, width = 400, height = 400, _dpi) {\\n    const ctx = canvas.getContext('2d');\\n\\n    const dpr = window.devicePixelRatio || 1;\\n    const bsr =\\n      ctx.webkitBackingStorePixelRatio ||\\n      ctx.mozBackingStorePixelRatio ||\\n      ctx.msBackingStorePixelRatio ||\\n      ctx.oBackingStorePixelRatio ||\\n      ctx.backingStorePixelRatio ||\\n      1;\\n\\n    const dpi = _dpi || dpr / bsr;\\n\\n    canvas.style.width = `${width}px`;\\n    canvas.style.height = `${height}px`;\\n    canvas.width = dpi * width;\\n    canvas.height = dpi * height;\\n    ctx.scale(dpi, dpi);\\n\\n    return { ctx, dpi };\\n  }\\n\\n  const size = { width: window.innerWidth, height: window.innerHeight };\\n  const { ctx } = initCanvas(canvas, size.width, size.height);\\n\\n  let steps = [];\\n  let prevSteps = [];\\n\\n  const step = (x, y, rad, counter = { value: 0 }) => {\\n    const length = Math.random() * 6;\\n    counter.value += 1;\\n\\n    const [nx, ny] = polar2cart(x, y, length, rad);\\n\\n    ctx.beginPath();\\n    ctx.moveTo(x, y);\\n    ctx.lineTo(nx, ny);\\n    ctx.stroke();\\n\\n    const rad1 = rad + Math.random() * r15;\\n    const rad2 = rad - Math.random() * r15;\\n\\n    if (\\n      nx < -100 ||\\n      nx > size.width + 100 ||\\n      ny < -100 ||\\n      ny > size.height + 100\\n    )\\n      return;\\n\\n    const rate = counter.value <= 30 ? 0.8 : 0.5;\\n\\n    if (Math.random() < rate) steps.push(() => step(nx, ny, rad1, counter));\\n\\n    if (Math.random() < rate) steps.push(() => step(nx, ny, rad2, counter));\\n  };\\n\\n  const polar2cart = (x = 0, y = 0, r = 0, theta = 0) => {\\n    const dx = r * Math.cos(theta);\\n    const dy = r * Math.sin(theta);\\n    return [x + dx, y + dy];\\n  };\\n\\n  const frame = () => {\\n    prevSteps = steps;\\n    steps = [];\\n\\n    if (!prevSteps.length) {\\n      cancelAnimationFrame(raf);\\n      stopped = true;\\n    }\\n\\n    prevSteps.forEach((i) => {\\n      if (Math.random() < 0.5) steps.push(i);\\n      else i();\\n    });\\n\\n    raf = requestAnimationFrame(frame);\\n  };\\n\\n  let raf;\\n\\n  const start = () => {\\n    cancelAnimationFrame(raf);\\n    ctx.clearRect(0, 0, size.width, size.height);\\n    ctx.lineWidth = 1;\\n    ctx.strokeStyle = color;\\n    prevSteps = [];\\n    steps = [\\n      () => step(randomMiddle() * size.width, -5, r90),\\n      () => step(randomMiddle() * size.width, size.height + 5, -r90),\\n      () => step(-5, randomMiddle() * size.height, 0),\\n      () => step(size.width + 5, randomMiddle() * size.height, r180)\\n    ];\\n    if (size.width < 500) steps = steps.slice(0, 2);\\n    raf = requestAnimationFrame(frame);\\n    stopped = false;\\n  };\\n\\n  const randomMiddle = () => Math.random() * 0.6 + 0.2;\\n\\n  start();\\n};\\n\",\"type\":\"application/javascript\",\"module-type\":\"library\"},\"$:/plugins/oeyoews/plum-blosssom/widget.js\":{\"title\":\"$:/plugins/oeyoews/plum-blosssom/widget.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/plum-blosssom/widget.js\\ntype: application/javascript\\nmodule-type: widget\\n\\nplum-blosssom widget\\n\\n\\\\*/\\nconst { widget: Widget } = require('$:/core/modules/widgets/widget.js');\\n\\nclass PlumWidget extends Widget {\\n  constructor(parseTreeNode, options) {\\n    super(parseTreeNode, options);\\n  }\\n\\n  render(parent, nextSibling) {\\n    if (!$tw.browser) return;\\n    this.parentDomNode = parent;\\n    this.computeAttributes();\\n    this.execute();\\n\\n    const canvas = document.createElement('canvas');\\n\\n    const plum = require('./plum');\\n    plum(canvas);\\n\\n    parent.insertBefore(canvas, nextSibling);\\n    this.domNodes.push(canvas);\\n  }\\n}\\n\\n/**\\n * @description plum-blosssom widget\\n */\\nexports.plum = PlumWidget;\\n\",\"type\":\"application/javascript\",\"module-type\":\"widget\"}}}",
        "description": "plum-blosssom",
        "author": "oeyoews",
        "version": "0.0.1",
        "core-version": ">=5.3.0",
        "plugin-type": "plugin",
        "name": "plum-blosssom",
        "meat#disabled": "yes",
        "qrcode": "yes",
        "dependents": "$:/plugins/oeyoews/tiddlywiki-tailwindcss-plus",
        "list": "readme"
    }
]