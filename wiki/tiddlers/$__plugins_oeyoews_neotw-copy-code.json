{"tiddlers":{"$:/plugins/oeyoews/neotw-copy-code/Layout":{"title":"$:/plugins/oeyoews/neotw-copy-code/Layout","tags":"$:/tags/Layout","name":"{{$:/plugins/oeyoews/neotw-copy-code/icon}} Neotw Copy Code","description":"{{$:/plugins/oeyoews/neotw-copy-code/readme!!description}}","text":"\\import [[$:/core/ui/PageMacros]] [all[shadows+tiddlers]tag[$:/tags/Macro]!has[draft.of]]\n\n<$vars\n  tv-config-toolbar-icons={{$:/config/Toolbar/Icons}}\n  tv-config-toolbar-text={{$:/config/Toolbar/Text}}\n  tv-config-toolbar-class={{$:/config/Toolbar/ButtonClass}}\n  tv-enable-drag-and-drop={{$:/config/DragAndDrop/Enable}}\n  tv-show-missing-links={{$:/config/MissingLinks}}\n  storyviewTitle={{$:/view}}\n  languageTitle={{{ [{$:/language}get[name]] }}}>\n\n<div class=\"prose max-w-none prose-indigo m-auto sm:w-auto md:w-2/3\">\n{{{ [[$:/plugins/oeyoews/neotw-copy-code/readme]] ||$:/core/ui/ViewTemplate }}}\n</div>"},"$:/plugins/oeyoews/neotw-copy-code/readme":{"title":"$:/plugins/oeyoews/neotw-copy-code/readme","description":"~Copy Code","text":"<div class=\"prose max-w-none prose-indigo\">\n\n!! Neotw Copy Code\n\n> 图标支持的 highlgiht 识别的全部语言\n\n> This plugin can greatly improve the efficiency and convenience of displaying and sharing code in TiddlyWiki, especially when you need to copy code frequently.\n\n> 这个插件可以极大地提高在 TiddlyWiki 中显示和分享代码的效率和便利性，尤其是在需要频繁复制代码时。\n\n!! TODO\n\n* support filename, such as `main.js`\n\n!! Examples\n\n```bash\r\n#!/bin/bash\r\necho \"Hello, TiddlyWiki!\"\r\n```\n\n```c\r\n#include <stdio.h>\n\nint main() {\r\n    printf(\"Hello, TiddlyWiki!\\n\");\r\n    return 0;\r\n}\r\n```\n\n```cpp\r\n#include <iostream>\n\nint main() {\r\n    std::cout << \"Hello, TiddlyWiki!\" << std::endl;\r\n    return 0;\r\n}\r\n```\n\n```csharp\r\nusing System;\n\nclass Program {\r\n    static void Main(string[] args) {\r\n        Console.WriteLine(\"Hello, TiddlyWiki!\");\r\n    }\r\n}\r\n```\n\n```css\r\n/* index.css */\r\nbody::before {\r\n    content: \"Hello, TiddlyWiki!\";\r\n}\r\n```\n\n```go\r\npackage main\n\nimport \"fmt\"\n\nfunc main() {\r\n    fmt.Println(\"Hello, TiddlyWiki!\")\r\n}\r\n```\n\n```html\r\n<!DOCTYPE html5>\r\n<html>\r\n<head>\r\n    <title>Hello, TiddlyWiki!</title>\r\n</head>\r\n<body>\r\nHello\r\n</body>\r\n</html>\r\n```\n\n```java\r\npublic class HelloWorld {\r\n    public static void main(String[] args) {\r\n        System.out.println(\"Hello, TiddlyWiki!\");\r\n    }\r\n}\r\n```\n\n```javascript\r\nconsole.log(\"Hello, TiddlyWiki!\");\r\n```\n\n```json\r\n{\r\n  \"message\": \"Hello, TiddlyWiki!\"\r\n}\r\n```\n\n```kotlin\r\nfun main() {\r\n    println(\"Hello, TiddlyWiki!\")\r\n}\r\n```\n\n```less\r\n@message: \"Hello, TiddlyWiki!\";\r\nbody::before {\r\n    content: @message;\r\n}\r\n```\n\n```lua\r\nprint(\"Hello, TiddlyWiki!\")\r\n```\n\n```makefile\r\nhello:\r\n    @echo \"Hello, TiddlyWiki!\"\r\n```\n\n```markdown\r\n# Hello, TiddlyWiki!\r\n```\n\n```objective-c\r\n#import <Foundation/Foundation.h>\n\nint main(int argc, const char * argv[]) {\r\n    @autoreleasepool {\r\n        NSLog(@\"Hello, TiddlyWiki!\");\r\n    }\r\n    return 0;\r\n}\r\n```\n\n```perl\r\nprint \"Hello, TiddlyWiki!\\n\";\r\n```\n\n```php\r\n<?php\r\necho \"Hello, TiddlyWiki!\";\r\n?>\r\n```\n\n```\r\nHello, TiddlyWiki!\r\n```\n\n```python\r\nprint(\"Hello, TiddlyWiki!\")\r\n```\n\n```r\r\ncat(\"Hello, TiddlyWiki!\\n\")\r\n```\n\n```ruby\r\nputs \"Hello, TiddlyWiki!\"\r\n```\n\n```rust\r\nfn main() {\r\n    println!(\"Hello, TiddlyWiki!\");\r\n}\r\n```\n\n```scss\r\n$greeting: \"Hello, TiddlyWiki!\";\n\nbody::before {\r\n    content: $greeting;\r\n}\r\n```\n\n```sql\r\nSELECT 'Hello, TiddlyWiki!';\r\n```\n\n```\r\n$ echo \"Hello, TiddlyWiki!\"\r\n```\n\n```swift\r\nimport Swift\n\nprint(\"Hello, TiddlyWiki!\")\r\n```\n\n```toml\r\nmessage = \"Hello, TiddlyWiki!\"\r\n```\n\n```typescript\r\nconsole.log(\"Hello, TiddlyWiki!\");\r\n```\n\n```vb\r\nModule HelloWorld\r\n    Sub Main()\r\n        Console.WriteLine(\"Hello, TiddlyWiki!\")\r\n    End Sub\r\nEnd Module\r\n```\n\n```xml\r\n<root>\r\n    <message>Hello, TiddlyWiki!</message>\r\n</root>\r\n```\n\n```yaml\r\nmessage: Hello, TiddlyWiki!\r\n```\n\n```apache\r\n# httpd.conf\r\nServerName localhost\n\n<VirtualHost *:80>\r\n    DocumentRoot \"/path/to/www\"\r\n    ServerName example.com\r\n</VirtualHost>\r\n```\n\n```dockerfile\r\nFROM nginx:latest\n\nCOPY index.html /usr/share/nginx/html/index.html\r\n```\n\n```fortran\r\nprogram HelloWorld\r\n    print *, \"Hello, TiddlyWiki!\"\r\nend program HelloWorld\r\n```\n\n```latex\r\n\\documentclass{article}\n\n\\begin{document}\r\nHello, TiddlyWiki!\r\n\\end{document}\r\n```\n\n```nginx\r\nserver {\r\n    listen 80;\r\n    server_name example.com;\n\n    location / {\r\n        root /var/www/html;\r\n        index index.html;\r\n    }\r\n}\r\n```\r\n"},"$:/core/modules/widgets/codeblock.js":{"title":"$:/core/modules/widgets/codeblock.js","text":"/*\\\ntitle: $:/core/modules/widgets/codeblock.js\ntype: application/javascript\nmodule-type: widget\n\nCode block node widget\n\n\\*/\n(function () {\n  /*jslint node: true, browser: true */\n  /*global $tw: false */\n  'use strict';\n\n  var Widget = require('$:/core/modules/widgets/widget.js').widget;\n\n  class CodeBlockWidget extends Widget {\n    constructor(parseTreeNode, options) {\n      super(parseTreeNode, options);\n    }\n\n    render(parent, nextSibling) {\n      // 不要加这句话，构建 library 的时候需要使用到这个 widget(server)\n      // if (!$tw.browser) return;\n\n      this.parentDomNode = parent;\n      this.computeAttributes();\n      this.execute();\n\n      const domNode = this.document.createElement('pre');\n      const codeNode = this.document.createElement('code');\n      const code = this.getAttribute('code', '');\n      let fileType = this.language;\n      // 排除一些文件类型，不要修改默认输出，比如会影响 text/css, 导致样式失效\n      // @see-also https://talk.tiddlywiki.org/t/how-highlight-js-works-on-codeblock/8083/17\n      if (\n        fileType?.startsWith('text/') ||\n        fileType?.startsWith('image/') ||\n        fileType?.startsWith('application/')\n      ) {\n        fileType = '';\n      }\n      const classNames =\n        'absolute scale-0 group-hover:scale-100 overflow-auto fixed top-0 right-0 bg-transparent group-hover:bg-gray-300 group-hover:dark:bg-gray-700 transition-all duration-600 ease-in-out p-1 flex flex-row rounded backdrop-blur p-1';\n\n      const copyButton = this.document.createElement('button');\n      copyButton.style.textTransform = 'lowercase';\n\n      codeNode.appendChild(this.document.createTextNode(code));\n\n      domNode.appendChild(codeNode);\n\n      parent.insertBefore(domNode, nextSibling);\n      this.domNodes.push(domNode);\n\n      if (this.postRender) {\n        this.postRender();\n      }\n\n      // patch: must be called after postrender\n      domNode.className =\n        'relative group p-1 bg-neutral-200/70 dark:bg-gray-400';\n      codeNode.textContent && domNode.appendChild(copyButton);\n      copyButton?.classList?.add(...classNames.split(' '));\n      // https://tiddlywiki.com/#View%20Template%20Body%20Cascade:%5B%5BView%20Template%20Body%20Cascade%5D%5D%20%24%3A%2Fcore%2Fui%2FViewTemplate%2Fbody%2Fplugin\n      // https://talk.tiddlywiki.org/t/how-highlight-js-works-on-codeblock/8083/11\n      /* 你可以这样写成 main.js, 但是目前 highlgith.js 不识别文件类型\n      bug: text/vnd.tiddlywiki 不能正常渲染 main.js, markdown 工作正常\n      bug: but this editor cannot recognize correct code type, need modify relate rules\n      patch:\n      or pop\n      var tokens = language.split('.');\n      language = tokens[tokens.length - 1]; */\n      copyButton.textContent = fileType;\n\n      // icon\n      const fileIcon = this.document.createElement('iconify-icon');\n      let standardIconLanguage =\n        codeNode.className.match(/language-(\\w+)/)?.[1] || '';\n      // simple-icons some special language mapping\n      const languageMapping = {\n        bash: 'gnubash',\n        css: 'css3',\n        cpp: 'cplusplus',\n        java: 'openjdk',\n        ini: 'toml',\n        dockerfile: 'docker',\n        scss: 'sass',\n        makefile: 'cmake',\n        sql: 'mysql',\n        html: 'html5', // html language-xml bug\n        vbnet: 'visualbasic',\n        xml: 'html5',\n        '': 'tiddlywiki'\n      };\n      if (standardIconLanguage in languageMapping) {\n        standardIconLanguage = languageMapping[standardIconLanguage];\n      }\n\n      fileIcon.setAttribute('icon', `simple-icons:${standardIconLanguage}`);\n      fileIcon.className = 'mx-1';\n      copyButton.appendChild(fileIcon);\n\n      /* const { href } = window.location;\n      if (href.includes('0.0.0.0')) {\n        copyButton?.classList?.add('cursor-not-allowed');\n        copyButton.disabled = true;\n        copyButton.title = `${href} 剪切板不可用`;\n      } */\n\n      // let clipboardTimer;\n      copyButton.addEventListener('click', () => {\n        // clearTimeout(clipboardTimer);\n        // clipboard api 不会向用户发出询问，在不安全的上下文中 (0.0.0.0), clipboard api 不会被允许\n        const copyToClipboard = $tw.utils.copyToClipboard;\n        copyToClipboard(codeNode.textContent, {\n          doNotNotify: true\n        });\n        // TODO: add judge\n        this.parentWidget.dispatchEvent({\n          type: 'om-notify',\n          paramObject: {\n            title: '复制成功',\n            text: ''\n          }\n        });\n        // copyButton.textContent = 'copied';\n        // clipboardTimer = setTimeout(() => {\n        //   copyButton.textContent = fileType;\n        //   copyButton.appendChild(fileIcon);\n        // }, 1000);\n        /* navigator?.clipboard?.writeText(codeNode.textContent).then(() => {\n          copyButton.textContent = 'copied';\n          clipboardTimer = setTimeout(() => {\n            copyButton.textContent = fileType;\n            copyButton.appendChild(fileIcon);\n          }, 1000);\n        }); */\n      });\n    }\n\n    execute() {\n      // 不能为 undefined, 否则 使用 obj 的一些方法会报错 (@highlightjs)\n      this.language = this.getAttribute('language', '');\n    }\n\n    refresh(changedTiddlers) {\n      const changedAttributes = this.computeAttributes();\n      if (changedAttributes.code || changedAttributes.language) {\n        this.refreshSelf();\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  exports.codeblock = CodeBlockWidget;\n})();\n","type":"application/javascript","module-type":"widget"},"$:/plugins/oeyoews/neotw-copy-code/icon":{"title":"$:/plugins/oeyoews/neotw-copy-code/icon","type":"image/svg+xml","text":"<svg stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\" stroke-linejoin=\"round\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path><path d=\"M8 8m0 2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2z\"></path><path d=\"M16 8v-2a2 2 0 0 0 -2 -2h-8a2 2 0 0 0 -2 2v8a2 2 0 0 0 2 2h2\"></path></svg>\n"}}}